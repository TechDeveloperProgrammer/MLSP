name: MLSP-MACP Continuous Integration and Deployment

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  PYTHON_VERSION: 3.9
  POETRY_VERSION: 1.2.2

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ env.PYTHON_VERSION }}
    
    - name: Install Poetry
      run: |
        pip install poetry==${{ env.POETRY_VERSION }}
        poetry config virtualenvs.create false
    
    - name: Install dependencies
      run: poetry install
    
    - name: Run Black Formatter
      run: poetry run black --check .
    
    - name: Run Flake8 Linter
      run: poetry run flake8 .
    
    - name: Run MyPy Type Checking
      run: poetry run mypy macp
    
    - name: Run Pytest
      run: poetry run pytest tests/

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Bandit Security Scan
      run: |
        pip install bandit
        bandit -r macp -f custom
    
    - name: Scan Dependencies
      run: |
        pip install safety
        safety check

  build-and-deploy:
    needs: [lint-and-test, security-scan]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Build and Push Docker Image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKERHUB_USERNAME }}/mlsp-macp:latest
          ${{ secrets.DOCKERHUB_USERNAME }}/mlsp-macp:${{ github.sha }}
    
    - name: Deploy to Kubernetes
      if: github.ref == 'refs/heads/main'
      run: |
        echo "${{ secrets.KUBE_CONFIG }}" | base64 --decode > kubeconfig
        export KUBECONFIG=./kubeconfig
        kubectl set image deployment/mlsp-core mlsp-core=${{ secrets.DOCKERHUB_USERNAME }}/mlsp-macp:${{ github.sha }}

  performance-testing:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Performance Tests
      run: |
        pip install locust
        locust -f tests/performance/locustfile.py --headless -u 100 -r 10 -t 1h

  notify:
    needs: [lint-and-test, security-scan, build-and-deploy, performance-testing]
    runs-on: ubuntu-latest
    steps:
    - name: Slack Notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        fields: repo,message,commit,author,action,eventName,ref,workflow
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}
      if: always()
